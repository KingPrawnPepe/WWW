3.1.20 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;i;0;	[ :@imported_filename"shared:@options{ o:Sass::Tree::CommentNode:@silenti :@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	[ ;@:
@loud0o:Sass::Tree::VariableNode;i:
@name" default-transition-property:@guarded"!default:
@expro:Sass::Script::String	;"all;i:
@type:identifier;@;	[ ;@o;;i;" default-transition-duration;"!default;o:Sass::Script::Number:@original"1s;i;i:@denominator_units[ :@numerator_units["s;@;	[ ;@o;;i;" default-transition-function;"!default;o:Sass::Script::Bool;F;i;@;	[ ;@o;;i;"default-transition-delay;"!default;o;;F;i;@;	[ ;@o;;i;"#transitionable-prefixed-values;"!default;o:Sass::Script::List	;[o;	;"transform;i;;;@o;	;"transform-origin;i;;;@;i:@separator:
comma;@;	[ ;@o;;i ;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	[ ;@;0o:Sass::Tree::MixinDefNode;T:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;"property-1;@o;"	;#" default_transition_property;i&;" default-transition-property;@[o;";#"property_2;"property-2;@o;;F;i';@[o;";#"property_3;"property-3;@o;;F;i(;@[o;";#"property_4;"property-4;@o;;F;i);@[o;";#"property_5;"property-5;@o;;F;i*;@[o;";#"property_6;"property-6;@o;;F;i+;@[o;";#"property_7;"property-7;@o;;F;i,;@[o;";#"property_8;"property-8;@o;;F;i-;@[o;";#"property_9;"property-9;@o;;F;i.;@[o;";#"property_10;"property-10;@o;;F;i/;@;i0;"transition-property;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"property_1:
@linei1:
@name"property-1:@options{ ;i1;"type-of:@keywords{ ;@;i1:@operand2o:Sass::Script::String	:@value"string;i1:
@type:identifier;@;@:@operator:eq0[o:Sass::Tree::VariableNode;i1;"property-1:@guarded0:
@expro;
;[o;		;
"property_1;i1;"property-1;@;i1;"unquote;{ ;@:@children[ ;@o;;i2;"properties;0;o:Sass::Script::Funcall
;![o;"	;#"property_1;i2;"property-1;@o;"	;#"property_2;i2;"property-2;@o;"	;#"property_3;i2;"property-3;@o;"	;#"property_4;i2;"property-4;@o;"	;#"property_5;i2;"property-5;@o;"	;#"property_6;i2;"property-6;@o;"	;#"property_7;i2;"property-7;@o;"	;#"property_8;i2;"property-8;@o;"	;#"property_9;i2;"property-9;@o;"	;#"property_10;i2;"property-10;@;i2;"compact:@keywords{ ;@;	[ ;@u;$¼[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@linei3:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"-webkit;i3:
@type:identifier;	@	o; 	;"properties;i3;"properties;	@	;i3;"prefixed-for-transition:@keywords{ ;	@	;i3;[" -webkit-transition-property:@prop_syntax:new:@children[ ;	@	u;$¸[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@linei4:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"	-moz;i4:
@type:identifier;	@	o; 	;"properties;i4;"properties;	@	;i4;"prefixed-for-transition:@keywords{ ;	@	;i4;["-moz-transition-property:@prop_syntax:new:@children[ ;	@	u;$°[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@linei5:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"-o;i5:
@type:identifier;	@	o; 	;"properties;i5;"properties;	@	;i5;"prefixed-for-transition:@keywords{ ;	@	;i5;["-o-transition-property:@prop_syntax:new:@children[ ;	@	o:Sass::Tree::PropNode:
@tabsi ;o;"	;#"properties;i6;"properties;@;i6;["transition-property:@prop_syntax:new;	[ ;@;@o;;i ;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	[ ;@;0o; ;T;![[o;";#"duration_1;"duration-1;@o;"	;#" default_transition_duration;i>;" default-transition-duration;@[o;";#"duration_2;"duration-2;@o;;F;i?;@[o;";#"duration_3;"duration-3;@o;;F;i@;@[o;";#"duration_4;"duration-4;@o;;F;iA;@[o;";#"duration_5;"duration-5;@o;;F;iB;@[o;";#"duration_6;"duration-6;@o;;F;iC;@[o;";#"duration_7;"duration-7;@o;;F;iD;@[o;";#"duration_8;"duration-8;@o;;F;iE;@[o;";#"duration_9;"duration-9;@o;;F;iF;@[o;";#"duration_10;"duration-10;@o;;F;iG;@;iH;"transition-duration;	[u;$Í[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1:
@lineiI:
@name"duration-1:@options{ ;iI;"type-of:@keywords{ ;@;iI:@operand2o:Sass::Script::String	:@value"string;iI:
@type:identifier;@;@:@operator:eq0[o:Sass::Tree::VariableNode;iI;"duration-1:@guarded0:
@expro;
;[o;		;
"duration_1;iI;"duration-1;@;iI;"unquote;{ ;@:@children[ ;@o;;iJ;"durations;0;o;%
;![o;"	;#"duration_1;iJ;"duration-1;@o;"	;#"duration_2;iJ;"duration-2;@o;"	;#"duration_3;iJ;"duration-3;@o;"	;#"duration_4;iJ;"duration-4;@o;"	;#"duration_5;iJ;"duration-5;@o;"	;#"duration_6;iJ;"duration-6;@o;"	;#"duration_7;iJ;"duration-7;@o;"	;#"duration_8;iJ;"duration-8;@o;"	;#"duration_9;iJ;"duration-9;@o;"	;#"duration_10;iJ;"duration-10;@;iJ;"compact;&{ ;@;	[ ;@o:Sass::Tree::MixinNode;![o;	;"transition-duration;iK;;;@o;"	;#"durations;iK;"durations;@o;	;"	-moz;iL;;;@o;	;"-webkit;iL;;;@o;	;"-o;iL;;;@o:!Sass::Script::UnaryOperation	;iL:@operando;	;"-ms;iL;;;@;@:@operator:noto;,	;iL;-o;	;"-khtml;iL;;;@;@;.;/o;	;"official;iL;;;@;iM;"experimental;	[ ;&{ ;@;@o;;i ;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	[ ;@;0o; ;T;![[o;";#"function_1;"function-1;@o;"	;#" default_transition_function;iV;" default-transition-function;@[o;";#"function_2;"function-2;@o;;F;iW;@[o;";#"function_3;"function-3;@o;;F;iX;@[o;";#"function_4;"function-4;@o;;F;iY;@[o;";#"function_5;"function-5;@o;;F;iZ;@[o;";#"function_6;"function-6;@o;;F;i[;@[o;";#"function_7;"function-7;@o;;F;i\;@[o;";#"function_8;"function-8;@o;;F;i];@[o;";#"function_9;"function-9;@o;;F;i^;@[o;";#"function_10;"function-10;@o;;F;i_;@;i`;"transition-timing-function;	[o;;ia;"function-1;0;o;%
;![o;"	;#"function_1;ia;"function-1;@;ia;"unquote;&{ ;@;	[ ;@o;;ib;"functions;0;o;%
;![o;"	;#"function_1;ib;"function-1;@o;"	;#"function_2;ib;"function-2;@o;"	;#"function_3;ib;"function-3;@o;"	;#"function_4;ib;"function-4;@o;"	;#"function_5;ib;"function-5;@o;"	;#"function_6;ib;"function-6;@o;"	;#"function_7;ib;"function-7;@o;"	;#"function_8;ib;"function-8;@o;"	;#"function_9;ib;"function-9;@o;"	;#"function_10;ib;"function-10;@;ib;"compact;&{ ;@;	[ ;@o;+;![o;	;"transition-timing-function;ic;;;@o;"	;#"functions;ic;"functions;@o;	;"	-moz;id;;;@o;	;"-webkit;id;;;@o;	;"-o;id;;;@o;,	;id;-o;	;"-ms;id;;;@;@;.;/o;,	;id;-o;	;"-khtml;id;;;@;@;.;/o;	;"official;id;;;@;ie;"experimental;	[ ;&{ ;@;@o;;i ;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	[ ;@;0o; ;T;![[o;";#"delay_1;"delay-1;@o;"	;#"default_transition_delay;im;"default-transition-delay;@[o;";#"delay_2;"delay-2;@o;;F;in;@[o;";#"delay_3;"delay-3;@o;;F;io;@[o;";#"delay_4;"delay-4;@o;;F;ip;@[o;";#"delay_5;"delay-5;@o;;F;iq;@[o;";#"delay_6;"delay-6;@o;;F;ir;@[o;";#"delay_7;"delay-7;@o;;F;is;@[o;";#"delay_8;"delay-8;@o;;F;it;@[o;";#"delay_9;"delay-9;@o;;F;iu;@[o;";#"delay_10;"delay-10;@o;;F;iv;@;iw;"transition-delay;	[u;$¾[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1:
@lineix:
@name"delay-1:@options{ ;ix;"type-of:@keywords{ ;@;ix:@operand2o:Sass::Script::String	:@value"string;ix:
@type:identifier;@;@:@operator:eq0[o:Sass::Tree::VariableNode;ix;"delay-1:@guarded0:
@expro;
;[o;		;
"delay_1;ix;"delay-1;@;ix;"unquote;{ ;@:@children[ ;@o;;iy;"delays;0;o;%
;![o;"	;#"delay_1;iy;"delay-1;@o;"	;#"delay_2;iy;"delay-2;@o;"	;#"delay_3;iy;"delay-3;@o;"	;#"delay_4;iy;"delay-4;@o;"	;#"delay_5;iy;"delay-5;@o;"	;#"delay_6;iy;"delay-6;@o;"	;#"delay_7;iy;"delay-7;@o;"	;#"delay_8;iy;"delay-8;@o;"	;#"delay_9;iy;"delay-9;@o;"	;#"delay_10;iy;"delay-10;@;iy;"compact;&{ ;@;	[ ;@o;+;![o;	;"transition-delay;iz;;;@o;"	;#"delays;iz;"delays;@o;	;"	-moz;i{;;;@o;	;"-webkit;i{;;;@o;	;"-o;i{;;;@o;,	;i{;-o;	;"-ms;i{;;;@;@;.;/o;,	;i{;-o;	;"-khtml;i{;;;@;@;.;/o;	;"official;i{;;;@;i|;"experimental;	[ ;&{ ;@;@o;;i ;["*/* Transition all-in-one shorthand */;i;	[ ;@;0o; ;T;![	[o;";#"property;"property;@o;"	;#" default_transition_property;i};" default-transition-property;@[o;";#"duration;"duration;@o;"	;#" default_transition_duration;i~;" default-transition-duration;@[o;";#"function;"function;@o;"	;#" default_transition_function;i;" default-transition-function;@[o;";#"
delay;"
delay;@o;"	;#"default_transition_delay;i;"default-transition-delay;@;i;"single-transition;	[o;+;![o;%
;![o;	;[	o;"	;#"property;i;"property;@o;"	;#"duration;i;"duration;@o;"	;#"function;i;"function;@o;"	;#"
delay;i;"
delay;@;i;:
space;@;i;"compact;&{ ;@;i;"transition;	[ ;&{ ;@;@o; ;T;![[o;";#"transition_1;"transition-1;@o;	;"default;i;;;@[o;";#"transition_2;"transition-2;@o;;F;i;@[o;";#"transition_3;"transition-3;@o;;F;i;@[o;";#"transition_4;"transition-4;@o;;F;i;@[o;";#"transition_5;"transition-5;@o;;F;i;@[o;";#"transition_6;"transition-6;@o;;F;i;@[o;";#"transition_7;"transition-7;@o;;F;i;@[o;";#"transition_8;"transition-8;@o;;F;i;@[o;";#"transition_9;"transition-9;@o;;F;i;@[o;";#"transition_10;"transition-10;@o;;F;i;@;i;"transition;	[u;$î[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@linei:
@name"transition-1:@options{ ;	i:@operand2o:Sass::Script::String	:@value"default;	i:
@type:identifier;@
;@
:@operator:eq0[o:Sass::Tree::VariableNode;	i;
"transition-1:@guarded0:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::List	;[	o;	;" default_transition_property;	i;
" default-transition-property;@
o;	;" default_transition_duration;	i;
" default-transition-duration;@
o;	;" default_transition_function;	i;
" default-transition-function;@
o;	;"default_transition_delay;	i;
"default-transition-delay;@
;	i:@separator:
space;@
;	i;
"compact:@keywords{ ;@
:@children[ ;@
o;;i;"transitions;0;o;;F;i;@;	[ ;@u;$g[o:Sass::Script::Operation
:@operand1o; 
;o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1:
@linei:
@name"transition-1:@options{ ;i;"type-of:@keywords{ ;@;i:@operand2o:Sass::Script::String	:@value"	list;i:
@type:identifier;@;@:@operator:eq;i;o; 
;o;
;[o;
;[o;		;
"transition_1;i;"transition-1;@o:Sass::Script::Number:@original"1;i;i:@denominator_units[ :@numerator_units[ ;@;i;"nth;{ ;@;i;"type-of;{ ;@;i;o;	;"	list;i;;;@;@;;;@;:andu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@linei:
@name"transitions:@guarded0:
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;i;"transition-1:@options{ o;	;"transition_2;i;"transition-2;@o;	;"transition_3;i;"transition-3;@o;	;"transition_4;i;"transition-4;@o;	;"transition_5;i;"transition-5;@o;	;"transition_6;i;"transition-6;@o;	;"transition_7;i;"transition-7;@o;	;"transition_8;i;"transition-8;@o;	;"transition_9;i;"transition-9;@o;	;"transition_10;i;"transition-10;@;i;"compact:@keywords{ ;@:@children[ ;@[o:Sass::Tree::VariableNode;i;"transitions:@guarded0:
@expro;
;[o;		;
"transition_1;i;"transition-1;@o;
;[o;		;
"transition_2;i;"transition-2;@o;		;
"transition_3;i;"transition-3;@o;		;
"transition_4;i;"transition-4;@o;		;
"transition_5;i;"transition-5;@o;		;
"transition_6;i;"transition-6;@o;		;
"transition_7;i;"transition-7;@o;		;
"transition_8;i;"transition-8;@o;		;
"transition_9;i;"transition-9;@o;		;
"transition_10;i;"transition-10;@;i;"compact;{ ;@o;	;"
comma;i;;;@;i;"	join;{ ;@:@children[ ;@o;;i;"delays;0;o;%
;![ ;i;"comma-list;&{ ;@;	[ ;@o;;i;"has-delays;0;o;;F;i;@;	[ ;@o;;i;"webkit-value;0;o;%
;![ ;i;"comma-list;&{ ;@;	[ ;@o;;i;"moz-value;0;o;%
;![ ;i;"comma-list;&{ ;@;	[ ;@o;;i;"o-value;0;o;%
;![ ;i;"comma-list;&{ ;@;	[ ;@o;;i ;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	[ ;@;0o:Sass::Tree::EachNode;T:	@var"transition;i¢:
@listo;"	;#"transitions;i¢;"transitions;@;	[o;;i ;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	[ ;@;0o;;i¥;"property;0;o;%
;![o;"	;#"transition;i¥;"transition;@o;;"1;i;i¥;[ ;[ ;@;i¥;"nth;&{ ;@;	[ ;@o;;i¦;"duration;0;o;;F;i¦;@;	[ ;@o;;i§;"timing-function;0;o;;F;i§;@;	[ ;@o;;i¨;"
delay;0;o;;F;i¨;@;	[ ;@u;$
[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"transition:
@linei©:
@name"transition:@options{ ;i©;"length:@keywords{ ;@;i©:@operand2o:Sass::Script::Number:@original"1:@valuei;i©:@denominator_units[ :@numerator_units[ ;@;@:@operator:gt0[o:Sass::Tree::VariableNode;i©;"duration:@guarded0:
@expro;
;[o;		;
"transition;i©;"transition;@o;;"2;i;i©;@;[ ;@;i©;"nth;{ ;@:@children[ ;@u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"transition:
@lineiª:
@name"transition:@options{ ;iª;"length:@keywords{ ;@;iª:@operand2o:Sass::Script::Number:@original"2:@valuei;iª:@denominator_units[ :@numerator_units[ ;@;@:@operator:gt0[o:Sass::Tree::VariableNode;iª;"timing-function:@guarded0:
@expro;
;[o;		;
"transition;iª;"transition;@o;;"3;i;iª;@;[ ;@;iª;"nth;{ ;@:@children[ ;@u;$M[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"transition:
@linei«:
@name"transition:@options{ ;i«;"length:@keywords{ ;@;i«:@operand2o:Sass::Script::Number:@original"3:@valuei;i«:@denominator_units[ :@numerator_units[ ;@;@:@operator:gt0[o:Sass::Tree::VariableNode;i«;"
delay:@guarded0:
@expro;
;[o;		;
"transition;i«;"transition;@o;;"4;i	;i«;@;[ ;@;i«;"nth;{ ;@:@children[ ;@o;;i«;"has-delays;0;o:Sass::Script::Bool;T;i«;@;[ ;@o;;i ;[";/* If a delay is provided without a timing function */;i­;	[ ;@;0u;$^[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"timing_function:
@linei®:
@name"timing-function:@options{ ;i®;"is-time:@keywords{ ;@;i®:@operand2o:!Sass::Script::UnaryOperation	;i®:@operando;		;
"
delay;i®;"
delay;@;@:@operator:not;@;:and0[o:Sass::Tree::VariableNode;i®;"
delay:@guarded0:
@expro;		;
"timing_function;i®;"timing-function;@:@children[ ;@o;;i®;"timing-function;0;o:Sass::Script::Bool:@valueF;i®;@;[ ;@o;;i®;"has-delays;0;o;;T;i®;@;[ ;@o;;i ;["9/* Keep a list of delays in case one is specified */;i°;	[ ;@;0o;;i±;"delays;0;o;%
;![o;"	;#"delays;i±;"delays;@o;%
;![o;"	;#"
delay;i±;"
delay;@o;"	;#"
delay;i±;"
delay;@o;;"0s;i ;i±;[ ;["s;@;i±;"if;&{ ;@;i±;"append;&{ ;@;	[ ;@o;;i³;"webkit-value;0;o;%
;![o;"	;#"webkit_value;i³;"webkit-value;@o;%
;![o;	;[o;%
;![o;	;"-webkit;i³;;;@o;"	;#"property;i³;"property;@;i³;"prefixed-for-transition;&{ ;@o;"	;#"duration;i³;"duration;@o;"	;#"timing_function;i³;"timing-function;@;i³;;0;@;i³;"compact;&{ ;@;i³;"append;&{ ;@;	[ ;@o;;i´;"moz-value;0;o;%
;![o;"	;#"moz_value;i´;"moz-value;@o;%
;![o;	;[	o;%
;![o;	;"	-moz;i´;;;@o;"	;#"property;i´;"property;@;i´;"prefixed-for-transition;&{ ;@o;"	;#"duration;i´;"duration;@o;"	;#"timing_function;i´;"timing-function;@o;"	;#"
delay;i´;"
delay;@;i´;;0;@;i´;"compact;&{ ;@;i´;"append;&{ ;@;	[ ;@o;;iµ;"o-value;0;o;%
;![o;"	;#"o_value;iµ;"o-value;@o;%
;![o;	;[	o;%
;![o;	;"-o;iµ;;;@o;"	;#"property;iµ;"property;@;iµ;"prefixed-for-transition;&{ ;@o;"	;#"duration;iµ;"duration;@o;"	;#"timing_function;iµ;"timing-function;@o;"	;#"
delay;iµ;"
delay;@;iµ;;0;@;iµ;"compact;&{ ;@;iµ;"append;&{ ;@;	[ ;@;@u;$á[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@linei¸:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;"webkit_value;i¸;"webkit-value;	@	;i¸;["-webkit-transition:@prop_syntax:new:@children[ ;	@	o:Sass::Tree::CommentNode:@silenti ;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;[ ;	@	:
@loud0u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@lineiº:
@name"has-delays:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;"delays;iº;"delays;	@	;iº;["-webkit-transition-delay:@prop_syntax:new:@children[ ;	@	u;$#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@linei»:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;"moz_value;i»;"moz-value;	@	;i»;["-moz-transition:@prop_syntax:new:@children[ ;	@	u;$[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@linei¼:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:
@tabsi :@valueo; 	;"o_value;i¼;"o-value;	@	;i¼;["-o-transition:@prop_syntax:new:@children[ ;	@	o;';(i ;o;"	;#"transitions;i½;"transitions;@;i½;["transition;);*;	[ ;@;@o;;i ;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	[ ;@;0o:Sass::Tree::FunctionNode;T;![[o;";#"	list;"	list;@o;	;[ ;iÁ;;0;@;iÁ;"comma-list;	[o:Sass::Tree::ReturnNode	;iÂ;o;%
;![o;	;[ ;iÂ;;0;@o;"	;#"	list;iÂ;"	list;@o;	;"
comma;iÂ;;;@;iÂ;"	join;&{ ;@;	[ ;@;@o;;i ;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	[ ;@;0o;4;T;![[o;";#"prefix;"prefix;@0[o;";#"property;"property;@0;iÆ;"prefixed-for-transition;	[u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"property:
@lineiÇ:
@name"property:@options{ ;iÇ;"type-of:@keywords{ ;@;iÇ:@operand2o:Sass::Script::String	:@value"	list;iÇ:
@type:identifier;@;@:@operator:equ:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values:
@lineiÎ:
@name"#transitionable-prefixed-values:@options{ o;	;"property;	iÎ;
"property;@;	iÎ;
"
index:@keywords{ ;@u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	:@underscored_name"property;iÑ:
@name"property:@options{ :@children[ ;@[o:Sass::Tree::ReturnNode	;	iÏ:
@expro: Sass::Script::Interpolation:@before0:@whitespace_beforei;	iÏ:@aftero;;o;;0;0;	iÏ;0:@originally_text:originally_text:	@mido:Sass::Script::String	:@value"-;	iÏ:
@type:identifier;@;@:@whitespace_afterF;0;	iÏ;0;F;o;	;"property;	iÏ;
"property;@;@;0;F;o;	;"prefix;	iÏ;
"prefix;@;@;0:@children[ ;@[o:Sass::Tree::VariableNode;iÈ;"new-list:@guarded0:
@expro;
;[ ;iÈ;"comma-list;{ ;@:@children[ ;@o:Sass::Tree::EachNode:@has_childrenT:	@var"v;iÉ:
@listo;		;
"property;iÉ;"property;@;[o;;iÊ;"new-list;0;o;
;[o;		;
"new_list;iÊ;"new-list;@o;
;[o;		;
"prefix;iÊ;"prefix;@o;		;
"v;iÊ;"v;@;iÊ;"prefixed-for-transition;{ ;@;iÊ;"append;{ ;@;[ ;@;@o:Sass::Tree::ReturnNode	;iÌ;o;		;
"new_list;iÌ;"new-list;@;[ ;@;@o;;i ;["7/* Checks if the value given is a unit of time. */;iÖ;	[ ;@;0o;4;T;![[o;";#"
value;"
value;@0;i×;"is-time;	[u;$ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:@underscored_name"
value:
@lineiØ:
@name"
value:@options{ ;iØ;"type-of:@keywords{ ;@;iØ:@operand2o:Sass::Script::String	:@value"number;iØ:
@type:identifier;@;@:@operator:equ:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool:@valueF;iÛ:@options{ :@children[ ;
@	[o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	;iÙ:@operando;	;iÙ;o;
;[o:Sass::Script::List	;[o;	;"s;iÙ;;;@o;	;"ms;iÙ;;;@;iÙ:@separator:
space;@o;
;[o;		;
"
value;iÙ;"
value;@;iÙ;"	unit;{ ;@;iÙ;"
index;{ ;@;@;:not;@;;:@children[ ;@;@;@